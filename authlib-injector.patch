diff --git a/src/main/java/org/to2mbn/authlibinjector/AuthlibInjector.java b/src/main/java/org/to2mbn/authlibinjector/AuthlibInjector.java
index 78ac323..06555d2 100644
--- a/src/main/java/org/to2mbn/authlibinjector/AuthlibInjector.java
+++ b/src/main/java/org/to2mbn/authlibinjector/AuthlibInjector.java
@@ -45,36 +44,23 @@ public final class AuthlibInjector {
 			transformerRegistry.accept(createTransformer(optionalConfig.get()));
 		} else {
 			info("no config available");
+			System.exit(1);
 		}
 	}
 
 	private static Optional<YggdrasilConfiguration> configure() {
-		String apiRoot = System.getProperty("org.to2mbn.authlibinjector.config");
+		String apiRoot = System.getProperty("nide8auth.uuid");
 		if (apiRoot == null) return empty();
-		info("api root: {0}", apiRoot);
+		apiRoot = "https://auth2.nide8.com:233/" + apiRoot + "/";
+		info("\u6b63\u5728\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u901a\u884c\u8bc1\u914d\u7f6e\u4fe1\u606f: {0}", apiRoot);
 
 		String metadataResponse;
 
-		String prefetched = System.getProperty("org.to2mbn.authlibinjector.config.prefetched");
-		if (prefetched == null) {
-			info("fetching metadata");
-			try {
-				metadataResponse = asString(getURL(apiRoot));
-			} catch (IOException e) {
-				info("unable to fetch metadata: {0}", e);
-				throw new UncheckedIOException(e);
-			}
-
-		} else {
-			info("prefetched metadata detected");
-			try {
-				metadataResponse = new String(Base64.getDecoder().decode(removeNewLines(prefetched)), UTF_8);
-			} catch (IllegalArgumentException e) {
-				info("unable to decode metadata: {0}\n"
-						+ "metadata to decode:\n"
-						+ "{1}", e, prefetched);
-				throw e;
-			}
+		try {
+			metadataResponse = asString(getURL(apiRoot));
+		} catch (IOException e) {
+			info("\u65e0\u6cd5\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u901a\u884c\u8bc1\u914d\u7f6e\u4fe1\u606f: {0}", e);
+			throw new UncheckedIOException(e);
 		}
 
 		debug("metadata: {0}", metadataResponse);
diff --git a/src/main/java/org/to2mbn/authlibinjector/YggdrasilConfiguration.java b/src/main/java/org/to2mbn/authlibinjector/YggdrasilConfiguration.java
index 0e9c663..59d5728 100644
--- a/src/main/java/org/to2mbn/authlibinjector/YggdrasilConfiguration.java
+++ b/src/main/java/org/to2mbn/authlibinjector/YggdrasilConfiguration.java
@@ -40,6 +40,10 @@ public class YggdrasilConfiguration {
 						.map(JsonUtils::asString)
 						.map(KeyUtils::parseSignaturePublicKey);
 
+		apiRoot = ofNullable(response.get("apiRoot"))
+						.map(JsonUtils::asString)
+						.orElse(apiRoot);
+
 		Map<String, Object> meta =
 				ofNullable(response.get("meta"))
 						.map(it -> (Map<String, Object>) new TreeMap<>(asObject(it)))
diff --git a/src/main/java/org/to2mbn/authlibinjector/javaagent/AuthlibInjectorPremain.java b/src/main/java/org/to2mbn/authlibinjector/javaagent/AuthlibInjectorPremain.java
index fea56f6..47e6a2f 100644
--- a/src/main/java/org/to2mbn/authlibinjector/javaagent/AuthlibInjectorPremain.java
+++ b/src/main/java/org/to2mbn/authlibinjector/javaagent/AuthlibInjectorPremain.java
@@ -50,7 +50,7 @@ public class AuthlibInjectorPremain {
 
 	private static void setupConfig(String arg) {
 		if (arg != null && !arg.isEmpty()) {
-			System.setProperty("org.to2mbn.authlibinjector.config", arg);
+			System.setProperty("nide8auth.uuid", arg);
 		}
 	}
 
diff --git a/src/main/java/org/to2mbn/authlibinjector/util/LoggingUtils.java b/src/main/java/org/to2mbn/authlibinjector/util/LoggingUtils.java
index d92e4e0..11c5be8 100644
--- a/src/main/java/org/to2mbn/authlibinjector/util/LoggingUtils.java
+++ b/src/main/java/org/to2mbn/authlibinjector/util/LoggingUtils.java
@@ -4,10 +4,10 @@ import java.text.MessageFormat;
 
 public final class LoggingUtils {
 
-	private static boolean debug = "true".equals(System.getProperty("org.to2mbn.authlibinjector.debug"));
+	private static boolean debug = "true".equals(System.getProperty("nide8auth.debug"));
 
 	public static void info(String message, Object... args) {
-		System.err.println("[authlib-injector] " + MessageFormat.format(message, args));
+		System.err.println("[\u7edf\u4e00\u901a\u884c\u8bc1] " + MessageFormat.format(message, args));
 	}
 
 	public static void debug(String message, Object... args) {
